name: Deploy NestJS to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código-fonte
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configuração do Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3. Instalação das dependências
      - name: Install dependencies
        run: npm install

      # 4. Construir a aplicação para produção
      - name: Build the app
        run: npm run build

      # 5. Zipar a build
      - name: Zip project
        run: zip -r app.zip . -x ".git/*" "node_modules/*" ".github/*"

      # 6. Instalar o AWS CLI
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      # 7. Configurar credenciais da AWS
      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      # 8. Fazer upload do pacote para o S3
      - name: Upload to S3
        run: aws s3 cp app.zip s3://clientes-api-bucket/app.zip  # Substitua pelo nome do bucket

      # 9. Deploy para o Elastic Beanstalk usando o pacote do S3
      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version --application-name "ClientesApi" \
            --version-label "${{ github.sha }}" \
            --source-bundle S3Bucket="clientes-api-bucket",S3Key="app.zip"
          
          aws elasticbeanstalk update-environment --environment-name "ClientesApi-env" \
            --version-label "${{ github.sha }}"

      # 10. Limpeza do workspace (opcional)
      - name: Clean up
        run: rm app.zip
